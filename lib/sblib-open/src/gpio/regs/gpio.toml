################################################################################
# File : gpio.toml
# Auth : David Gussler
# Lang : HDL-Registers TOML
#        https://hdl-registers.com/rst/user_guide/getting_started.html
# ==============================================================================
# Registers for the GPIO (General Purpose Input Output) module
################################################################################

################################################################################
[chan]

type = "register_array"
array_length = 3
description = """
GPIO Channel Registers.

The GPIO module has three 32-bit channels, each of which can be configured by
the firmware designer as output-only, input-only or input-output. Having the
firmware designer designate a channel as input-only or output-only helps prevent
software from accidentally assigning the wrong direction to a pin when the GPIO
direction is known ahead of time, preventing potential hardware damage.
"""


################################################################################
[chan.isr]
mode = "r_wpulse"
description = """
Interrupt Status Register.
"""

[chan.isr.isr]
type = "bit_vector"
width = 32
description = """
The Interrupt Status Register uses one bit to represent each interrupt
condition. When an interrupt condition occurs, it is immediately latched in
this register. The latched interrupt condition is cleared by writing a 1 to its
corresponding bit position. Writing a 1 to a bit position that is 0 has no
effect. Likewise, writing a 0 to a bit location that is 1 has no effect.
Multiple bits can be cleared with a single write.

For any bit set in the Interrupt Status Register, a corresponding bit must also
be set in the Interrupt Enable Register for the interrupt signal to be driven
active-high out of the module. The Interrupt Status Register is not affected
by the Interrupt Enable Register. The Interrupt Enable Register only enables or
disables the module's interrupt output signal.

Read definition for each bit:

* 0 = No interrupt has occurred
* 1 = Interrupt has occurred

Write definition for each bit:

* 0 = No effect
* 1 = Clear interrupt status

For the GPIO module, 
an interrupt is latched for a specific bit if the bit is configured as an input
and a 0->1 or 1->0 transition is detected. This implies that interrupts may only
occur for a GPIO bit that has been configured as an input, either statically
by the firmware designer, or dynamically at run-time by software.
"""


################################################################################
[chan.ier]
mode = "r_w"
description = """
Interrupt Enable Register.
"""

[chan.ier.ier]
type = "bit_vector"
width = 32
description = """
Read & write definition for each bit:

* 0 = Disable interrupt
* 1 = Enable interrupt
"""


################################################################################
[chan.dout]
mode = "r_wpulse"
description = """
Output Data Register.
"""

[chan.dout.dout]
type = "bit_vector"
width = 32
description = """
When the channel is configured for output mode, data written to this register
is output at the GPIO channel's output port.

The default value of this register is hard-coded by the FPGA. Ignore the generic
default value given in this register description (it is overridden in the FPGA).
Additional documentation must be provided by the firmware designer that gives
the true default value and for the mapping of these register bits to FPGA
signals, because these settings will be change for different firmware builds.

This register is only applicable when the channel is configured for input or
inout mode.
"""

################################################################################
[chan.din]
mode = "r"
description = """
Input Data Register.
"""

[chan.din.din]
type = "bit_vector"
width = 32
description = """
When the channel is configured for input mode, reads to this register return the
data present at the GPIO channel's input port.

Additional documentation must be provided by the firmware designer that gives
the mapping of these register bits to FPGA
signals, because these settings will be change for different firmware builds.

This register is only applicable when the channel is configured for output or
inout mode.
"""

################################################################################
[chan.tri]
mode = "r_wpulse"
description = """
Tri-state (Input) Enable Register.
"""

[chan.tri.tri]
type = "bit_vector"
width = 32
description = """
Read & write definition for each bit:

* 0 = Configure as output
* 1 = Configure as input

The default value of this register is hard-coded by the FPGA. Ignore the generic
default value given in this register description (it is overridden in the FPGA).
Additional documentation must be provided by the firmware designer that gives
the true default value and for the mapping of these register bits to FPGA
signals, because these settings will be change for different firmware builds.

This register is only applicable when the channel is configured for inout mode.
"""
